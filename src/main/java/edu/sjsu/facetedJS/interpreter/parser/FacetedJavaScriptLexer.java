// Generated from src/main/java/edu/sjsu/facetedJS/interpreter/parser/FacetedJavaScript.g4 by ANTLR 4.5.1

    package edu.sjsu.facetedJS.interpreter.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class FacetedJavaScriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		IF=10, ELSE=11, DO=12, WHILE=13, FOR=14, LABEL=15, WRTCHL=16, SECURE=17, 
		CREATECHL=18, ALERT=19, WINOPEN=20, FUNCTION=21, VAR=22, PRINT=23, RETURN=24, 
		NEW=25, DEFACET=26, PUSH=27, LENGTH=28, MD5=29, INT=30, BOOL=31, STRING=32, 
		NULL=33, UNDEFINED=34, INC=35, DEC=36, MUL=37, DIV=38, ADD=39, SUB=40, 
		MOD=41, GT=42, GE=43, LT=44, LE=45, EQ=46, NEQ=47, S_EQ=48, S_NEQ=49, 
		ASSIGN_REG=50, ASSIGN_ADD=51, ASSIGN_SUB=52, ASSIGN_MUL=53, ASSIGN_DIV=54, 
		SEPARATOR=55, AND=56, OR=57, ID=58, NEWLINE=59, BLOCK_COMMENT=60, LINE_COMMENT=61, 
		WS=62;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"IF", "ELSE", "DO", "WHILE", "FOR", "LABEL", "WRTCHL", "SECURE", "CREATECHL", 
		"ALERT", "WINOPEN", "FUNCTION", "VAR", "PRINT", "RETURN", "NEW", "DEFACET", 
		"PUSH", "LENGTH", "MD5", "INT", "BOOL", "STRING", "NULL", "UNDEFINED", 
		"INC", "DEC", "MUL", "DIV", "ADD", "SUB", "MOD", "GT", "GE", "LT", "LE", 
		"EQ", "NEQ", "S_EQ", "S_NEQ", "ASSIGN_REG", "ASSIGN_ADD", "ASSIGN_SUB", 
		"ASSIGN_MUL", "ASSIGN_DIV", "SEPARATOR", "AND", "OR", "ID", "NEWLINE", 
		"BLOCK_COMMENT", "LINE_COMMENT", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'('", "')'", "','", "'['", "']'", "'.'", "':'", "'iff'", 
		"'else'", "'do'", "'while'", "'for'", "'Label'", "'writeToChannel'", "'setSecurity'", 
		"'createChannel'", "'alert'", "'window.open'", "'function'", "'var'", 
		"'system.log'", "'return'", "'new'", "'defacet'", "'push'", "'length'", 
		"'md5'", null, null, null, "'null'", "'undefined'", "'++'", "'--'", "'*'", 
		"'/'", "'+'", "'-'", "'%'", "'>'", "'>='", "'<'", "'<='", "'=='", "'!='", 
		"'==='", "'!=='", "'='", "'+='", "'-='", "'*='", "'/='", "';'", "'&&'", 
		"'||'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, "IF", "ELSE", 
		"DO", "WHILE", "FOR", "LABEL", "WRTCHL", "SECURE", "CREATECHL", "ALERT", 
		"WINOPEN", "FUNCTION", "VAR", "PRINT", "RETURN", "NEW", "DEFACET", "PUSH", 
		"LENGTH", "MD5", "INT", "BOOL", "STRING", "NULL", "UNDEFINED", "INC", 
		"DEC", "MUL", "DIV", "ADD", "SUB", "MOD", "GT", "GE", "LT", "LE", "EQ", 
		"NEQ", "S_EQ", "S_NEQ", "ASSIGN_REG", "ASSIGN_ADD", "ASSIGN_SUB", "ASSIGN_MUL", 
		"ASSIGN_DIV", "SEPARATOR", "AND", "OR", "ID", "NEWLINE", "BLOCK_COMMENT", 
		"LINE_COMMENT", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public FacetedJavaScriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "FacetedJavaScript.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2@\u01bc\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3"+
		"\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\7\37\u0126\n\37\f\37\16"+
		"\37\u0129\13\37\3\37\5\37\u012c\n\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \5 \u0137"+
		"\n \3!\3!\7!\u013b\n!\f!\16!\u013e\13!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3"+
		"#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)"+
		"\3*\3*\3+\3+\3,\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61"+
		"\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65"+
		"\3\66\3\66\3\66\3\67\3\67\3\67\38\38\39\39\39\3:\3:\3:\3;\3;\7;\u0191"+
		"\n;\f;\16;\u0194\13;\3<\5<\u0197\n<\3<\3<\3<\3<\3=\3=\3=\3=\7=\u01a1\n"+
		"=\f=\16=\u01a4\13=\3=\3=\3=\3=\3=\3>\3>\3>\3>\7>\u01af\n>\f>\16>\u01b2"+
		"\13>\3>\3>\3?\6?\u01b7\n?\r?\16?\u01b8\3?\3?\3\u01a2\2@\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{"+
		"?}@\3\2\t\3\2\63;\3\2\62;\6\2\f\f\17\17$$^^\5\2C\\aac|\6\2\62;C\\aac|"+
		"\4\2\f\f\17\17\4\2\13\13\"\"\u01c4\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2"+
		"\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2"+
		"\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2"+
		"u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\177\3\2\2\2\5"+
		"\u0081\3\2\2\2\7\u0083\3\2\2\2\t\u0085\3\2\2\2\13\u0087\3\2\2\2\r\u0089"+
		"\3\2\2\2\17\u008b\3\2\2\2\21\u008d\3\2\2\2\23\u008f\3\2\2\2\25\u0091\3"+
		"\2\2\2\27\u0095\3\2\2\2\31\u009a\3\2\2\2\33\u009d\3\2\2\2\35\u00a3\3\2"+
		"\2\2\37\u00a7\3\2\2\2!\u00ad\3\2\2\2#\u00bc\3\2\2\2%\u00c8\3\2\2\2\'\u00d6"+
		"\3\2\2\2)\u00dc\3\2\2\2+\u00e8\3\2\2\2-\u00f1\3\2\2\2/\u00f5\3\2\2\2\61"+
		"\u0100\3\2\2\2\63\u0107\3\2\2\2\65\u010b\3\2\2\2\67\u0113\3\2\2\29\u0118"+
		"\3\2\2\2;\u011f\3\2\2\2=\u012b\3\2\2\2?\u0136\3\2\2\2A\u0138\3\2\2\2C"+
		"\u0141\3\2\2\2E\u0146\3\2\2\2G\u0150\3\2\2\2I\u0153\3\2\2\2K\u0156\3\2"+
		"\2\2M\u0158\3\2\2\2O\u015a\3\2\2\2Q\u015c\3\2\2\2S\u015e\3\2\2\2U\u0160"+
		"\3\2\2\2W\u0162\3\2\2\2Y\u0165\3\2\2\2[\u0167\3\2\2\2]\u016a\3\2\2\2_"+
		"\u016d\3\2\2\2a\u0170\3\2\2\2c\u0174\3\2\2\2e\u0178\3\2\2\2g\u017a\3\2"+
		"\2\2i\u017d\3\2\2\2k\u0180\3\2\2\2m\u0183\3\2\2\2o\u0186\3\2\2\2q\u0188"+
		"\3\2\2\2s\u018b\3\2\2\2u\u018e\3\2\2\2w\u0196\3\2\2\2y\u019c\3\2\2\2{"+
		"\u01aa\3\2\2\2}\u01b6\3\2\2\2\177\u0080\7}\2\2\u0080\4\3\2\2\2\u0081\u0082"+
		"\7\177\2\2\u0082\6\3\2\2\2\u0083\u0084\7*\2\2\u0084\b\3\2\2\2\u0085\u0086"+
		"\7+\2\2\u0086\n\3\2\2\2\u0087\u0088\7.\2\2\u0088\f\3\2\2\2\u0089\u008a"+
		"\7]\2\2\u008a\16\3\2\2\2\u008b\u008c\7_\2\2\u008c\20\3\2\2\2\u008d\u008e"+
		"\7\60\2\2\u008e\22\3\2\2\2\u008f\u0090\7<\2\2\u0090\24\3\2\2\2\u0091\u0092"+
		"\7k\2\2\u0092\u0093\7h\2\2\u0093\u0094\7h\2\2\u0094\26\3\2\2\2\u0095\u0096"+
		"\7g\2\2\u0096\u0097\7n\2\2\u0097\u0098\7u\2\2\u0098\u0099\7g\2\2\u0099"+
		"\30\3\2\2\2\u009a\u009b\7f\2\2\u009b\u009c\7q\2\2\u009c\32\3\2\2\2\u009d"+
		"\u009e\7y\2\2\u009e\u009f\7j\2\2\u009f\u00a0\7k\2\2\u00a0\u00a1\7n\2\2"+
		"\u00a1\u00a2\7g\2\2\u00a2\34\3\2\2\2\u00a3\u00a4\7h\2\2\u00a4\u00a5\7"+
		"q\2\2\u00a5\u00a6\7t\2\2\u00a6\36\3\2\2\2\u00a7\u00a8\7N\2\2\u00a8\u00a9"+
		"\7c\2\2\u00a9\u00aa\7d\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7n\2\2\u00ac"+
		" \3\2\2\2\u00ad\u00ae\7y\2\2\u00ae\u00af\7t\2\2\u00af\u00b0\7k\2\2\u00b0"+
		"\u00b1\7v\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7V\2\2\u00b3\u00b4\7q\2\2"+
		"\u00b4\u00b5\7E\2\2\u00b5\u00b6\7j\2\2\u00b6\u00b7\7c\2\2\u00b7\u00b8"+
		"\7p\2\2\u00b8\u00b9\7p\2\2\u00b9\u00ba\7g\2\2\u00ba\u00bb\7n\2\2\u00bb"+
		"\"\3\2\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7v\2\2\u00bf"+
		"\u00c0\7U\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7e\2\2\u00c2\u00c3\7w\2\2"+
		"\u00c3\u00c4\7t\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7"+
		"\7{\2\2\u00c7$\3\2\2\2\u00c8\u00c9\7e\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb"+
		"\7g\2\2\u00cb\u00cc\7c\2\2\u00cc\u00cd\7v\2\2\u00cd\u00ce\7g\2\2\u00ce"+
		"\u00cf\7E\2\2\u00cf\u00d0\7j\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7p\2\2"+
		"\u00d2\u00d3\7p\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7n\2\2\u00d5&\3\2\2"+
		"\2\u00d6\u00d7\7c\2\2\u00d7\u00d8\7n\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da"+
		"\7t\2\2\u00da\u00db\7v\2\2\u00db(\3\2\2\2\u00dc\u00dd\7y\2\2\u00dd\u00de"+
		"\7k\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7f\2\2\u00e0\u00e1\7q\2\2\u00e1"+
		"\u00e2\7y\2\2\u00e2\u00e3\7\60\2\2\u00e3\u00e4\7q\2\2\u00e4\u00e5\7r\2"+
		"\2\u00e5\u00e6\7g\2\2\u00e6\u00e7\7p\2\2\u00e7*\3\2\2\2\u00e8\u00e9\7"+
		"h\2\2\u00e9\u00ea\7w\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec\7e\2\2\u00ec\u00ed"+
		"\7v\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0\7p\2\2\u00f0"+
		",\3\2\2\2\u00f1\u00f2\7x\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7t\2\2\u00f4"+
		".\3\2\2\2\u00f5\u00f6\7u\2\2\u00f6\u00f7\7{\2\2\u00f7\u00f8\7u\2\2\u00f8"+
		"\u00f9\7v\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7o\2\2\u00fb\u00fc\7\60\2"+
		"\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7q\2\2\u00fe\u00ff\7i\2\2\u00ff\60\3"+
		"\2\2\2\u0100\u0101\7t\2\2\u0101\u0102\7g\2\2\u0102\u0103\7v\2\2\u0103"+
		"\u0104\7w\2\2\u0104\u0105\7t\2\2\u0105\u0106\7p\2\2\u0106\62\3\2\2\2\u0107"+
		"\u0108\7p\2\2\u0108\u0109\7g\2\2\u0109\u010a\7y\2\2\u010a\64\3\2\2\2\u010b"+
		"\u010c\7f\2\2\u010c\u010d\7g\2\2\u010d\u010e\7h\2\2\u010e\u010f\7c\2\2"+
		"\u010f\u0110\7e\2\2\u0110\u0111\7g\2\2\u0111\u0112\7v\2\2\u0112\66\3\2"+
		"\2\2\u0113\u0114\7r\2\2\u0114\u0115\7w\2\2\u0115\u0116\7u\2\2\u0116\u0117"+
		"\7j\2\2\u01178\3\2\2\2\u0118\u0119\7n\2\2\u0119\u011a\7g\2\2\u011a\u011b"+
		"\7p\2\2\u011b\u011c\7i\2\2\u011c\u011d\7v\2\2\u011d\u011e\7j\2\2\u011e"+
		":\3\2\2\2\u011f\u0120\7o\2\2\u0120\u0121\7f\2\2\u0121\u0122\7\67\2\2\u0122"+
		"<\3\2\2\2\u0123\u0127\t\2\2\2\u0124\u0126\t\3\2\2\u0125\u0124\3\2\2\2"+
		"\u0126\u0129\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u012c"+
		"\3\2\2\2\u0129\u0127\3\2\2\2\u012a\u012c\7\62\2\2\u012b\u0123\3\2\2\2"+
		"\u012b\u012a\3\2\2\2\u012c>\3\2\2\2\u012d\u012e\7v\2\2\u012e\u012f\7t"+
		"\2\2\u012f\u0130\7w\2\2\u0130\u0137\7g\2\2\u0131\u0132\7h\2\2\u0132\u0133"+
		"\7c\2\2\u0133\u0134\7n\2\2\u0134\u0135\7u\2\2\u0135\u0137\7g\2\2\u0136"+
		"\u012d\3\2\2\2\u0136\u0131\3\2\2\2\u0137@\3\2\2\2\u0138\u013c\7$\2\2\u0139"+
		"\u013b\n\4\2\2\u013a\u0139\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013a\3\2"+
		"\2\2\u013c\u013d\3\2\2\2\u013d\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f"+
		"\u0140\7$\2\2\u0140B\3\2\2\2\u0141\u0142\7p\2\2\u0142\u0143\7w\2\2\u0143"+
		"\u0144\7n\2\2\u0144\u0145\7n\2\2\u0145D\3\2\2\2\u0146\u0147\7w\2\2\u0147"+
		"\u0148\7p\2\2\u0148\u0149\7f\2\2\u0149\u014a\7g\2\2\u014a\u014b\7h\2\2"+
		"\u014b\u014c\7k\2\2\u014c\u014d\7p\2\2\u014d\u014e\7g\2\2\u014e\u014f"+
		"\7f\2\2\u014fF\3\2\2\2\u0150\u0151\7-\2\2\u0151\u0152\7-\2\2\u0152H\3"+
		"\2\2\2\u0153\u0154\7/\2\2\u0154\u0155\7/\2\2\u0155J\3\2\2\2\u0156\u0157"+
		"\7,\2\2\u0157L\3\2\2\2\u0158\u0159\7\61\2\2\u0159N\3\2\2\2\u015a\u015b"+
		"\7-\2\2\u015bP\3\2\2\2\u015c\u015d\7/\2\2\u015dR\3\2\2\2\u015e\u015f\7"+
		"\'\2\2\u015fT\3\2\2\2\u0160\u0161\7@\2\2\u0161V\3\2\2\2\u0162\u0163\7"+
		"@\2\2\u0163\u0164\7?\2\2\u0164X\3\2\2\2\u0165\u0166\7>\2\2\u0166Z\3\2"+
		"\2\2\u0167\u0168\7>\2\2\u0168\u0169\7?\2\2\u0169\\\3\2\2\2\u016a\u016b"+
		"\7?\2\2\u016b\u016c\7?\2\2\u016c^\3\2\2\2\u016d\u016e\7#\2\2\u016e\u016f"+
		"\7?\2\2\u016f`\3\2\2\2\u0170\u0171\7?\2\2\u0171\u0172\7?\2\2\u0172\u0173"+
		"\7?\2\2\u0173b\3\2\2\2\u0174\u0175\7#\2\2\u0175\u0176\7?\2\2\u0176\u0177"+
		"\7?\2\2\u0177d\3\2\2\2\u0178\u0179\7?\2\2\u0179f\3\2\2\2\u017a\u017b\7"+
		"-\2\2\u017b\u017c\7?\2\2\u017ch\3\2\2\2\u017d\u017e\7/\2\2\u017e\u017f"+
		"\7?\2\2\u017fj\3\2\2\2\u0180\u0181\7,\2\2\u0181\u0182\7?\2\2\u0182l\3"+
		"\2\2\2\u0183\u0184\7\61\2\2\u0184\u0185\7?\2\2\u0185n\3\2\2\2\u0186\u0187"+
		"\7=\2\2\u0187p\3\2\2\2\u0188\u0189\7(\2\2\u0189\u018a\7(\2\2\u018ar\3"+
		"\2\2\2\u018b\u018c\7~\2\2\u018c\u018d\7~\2\2\u018dt\3\2\2\2\u018e\u0192"+
		"\t\5\2\2\u018f\u0191\t\6\2\2\u0190\u018f\3\2\2\2\u0191\u0194\3\2\2\2\u0192"+
		"\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193v\3\2\2\2\u0194\u0192\3\2\2\2"+
		"\u0195\u0197\7\17\2\2\u0196\u0195\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0198"+
		"\3\2\2\2\u0198\u0199\7\f\2\2\u0199\u019a\3\2\2\2\u019a\u019b\b<\2\2\u019b"+
		"x\3\2\2\2\u019c\u019d\7\61\2\2\u019d\u019e\7,\2\2\u019e\u01a2\3\2\2\2"+
		"\u019f\u01a1\13\2\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a4\3\2\2\2\u01a2\u01a3"+
		"\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a3\u01a5\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a5"+
		"\u01a6\7,\2\2\u01a6\u01a7\7\61\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01a9\b="+
		"\2\2\u01a9z\3\2\2\2\u01aa\u01ab\7\61\2\2\u01ab\u01ac\7\61\2\2\u01ac\u01b0"+
		"\3\2\2\2\u01ad\u01af\n\7\2\2\u01ae\u01ad\3\2\2\2\u01af\u01b2\3\2\2\2\u01b0"+
		"\u01ae\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1\u01b3\3\2\2\2\u01b2\u01b0\3\2"+
		"\2\2\u01b3\u01b4\b>\2\2\u01b4|\3\2\2\2\u01b5\u01b7\t\b\2\2\u01b6\u01b5"+
		"\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b9"+
		"\u01ba\3\2\2\2\u01ba\u01bb\b?\2\2\u01bb~\3\2\2\2\f\2\u0127\u012b\u0136"+
		"\u013c\u0192\u0196\u01a2\u01b0\u01b8\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}